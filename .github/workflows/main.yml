name: Python package

on: [push, pull_request]
  workflow_dispatch:
# TODO What I need to do is grab the portaudio build code from
# https://github.com/PortAudio/portaudio/blob/master/.github/workflows/cmake.yml,
# modify that to build and install portaudio in a separate directory, and then
# build a wheel for each python version. (Though even then, I can't be sure
# how well Windows will find the libs and headers after a cmake install.)
#
# Though if I can find out where the files are installed by cmake install, then
# the better approach is to just pull master build artifacts for the portaudio
# repo, and then just copy those files to wherever they usually install to.
# This only really works though if I can always grab a latest successful
# master branch artifact, as the GitHub Action artifacts are auto-deleted after
# a certain period of days. Maybe I can get the latest master build artifact
# using the GitHub REST API?
#
# Also, since python 3.7 - 3.10 are all installed on ubuntu-latest and windows-latest,
# I can cut down on the number of jobs if I just ran each wheel build in serial.
# This will increase the time a human needs to wait for the builds to be done,
# but it will decrease the runner-time (since there will not need to be 4 runners
# running in parallel).

jobs:
  build:

    strategy:
      matrix:
        # platform: [ubuntu-latest, windows-latest]
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade wheel
          # Install cygwin
          curl -sSO https://cygwin.com/setup-x86_64.exe
          Start-Process setup-x86_64.exe -ArgumentList "--quiet-mode --root C:\cygwin64 --site http://cygwin.mirror.constant.com --packages `"gcc-core,gcc-g++`"" -Wait -NoNewWindow
          ls C:\cygwin64
      - name: Build wheel
        run: |
          sh build.sh
